// <auto-generated />
using Fonfapres.App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fonfapres.App.Data.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211007001121_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Fonfapres.App.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Fonfapres.App.Domain.CashBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("concept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CashBoxes");
                });

            modelBuilder.Entity("Fonfapres.App.Domain.Credit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("capital")
                        .HasColumnType("float");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("fee")
                        .HasColumnType("float");

                    b.Property<int>("fees")
                        .HasColumnType("int");

                    b.Property<string>("idCredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("insurance")
                        .HasColumnType("float");

                    b.Property<double>("intFee")
                        .HasColumnType("float");

                    b.Property<double>("interest")
                        .HasColumnType("float");

                    b.Property<double>("interests")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("Fonfapres.App.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bornDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("Fonfapres.App.Domain.Partner", b =>
                {
                    b.HasBaseType("Fonfapres.App.Domain.Person");

                    b.Property<string>("avalador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datein")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idrecPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Partner");
                });
#pragma warning restore 612, 618
        }
    }
}
